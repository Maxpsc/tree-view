{"version":3,"names":["format","first","middle","last","myComponentCss","MyComponent","_MyComponent_timer","set","this","Date","now","clickHandler","isOpen","connectedCallback","__classPrivateFieldSet","window","setInterval","curTime","disConnectedCallback","__classPrivateFieldGet","clearInterval","getText","render","time","toLocaleDateString","h","class","String","todoListCss","TodoList","watchStateHandler","newVal","oldVal","propName","console","log","handleInputChange","e","inputVal","target","value","handleInputEnter","keyCode","internalList","desc","done","todoAdded","emit","toggleDone","targetIdx","nList","slice","Object","assign","todoCompleted","removeItem","filter","_","idx","_a","list","length","bind","async","header","type","onInput","onKeyPress","placeholder","map","i","onClick","stopPropagation","treeViewCss","TreeView","renderNode","data","expanded","childNodes","label","children","open"],"sources":["./src/utils/utils.ts","./src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","./src/components/my-component/my-component.tsx","./src/components/todo-list/todo-list.css?tag=todo-list&encapsulation=shadow","./src/components/todo-list/todo-list.tsx","./src/components/tree-view/tree-view.css?tag=tree-view&encapsulation=shadow","./src/components/tree-view/tree-view.tsx"],"sourcesContent":["export function format(first: string, middle: string, last: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n",":host {\n  display: block;\n}\n\n.my-container {\n  padding: 20px;\n  background: grey;\n  color: #fff;\n}","import { Component, Prop, h, State, Listen } from '@stencil/core'\nimport { format } from '../../utils/utils'\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  /**\n   * The first name\n   */\n  @Prop() first: string\n\n  /**\n   * The middle name\n   */\n  @Prop() middle: string\n\n  /**\n   * The last name\n   */\n  @Prop() last: string\n\n  @State() isOpen: boolean = true\n  @Listen('click', { capture: true })\n  clickHandler() {\n    this.isOpen = !this.isOpen\n  }\n\n  /** input keyword */\n  @State() input: string\n\n  @State() curTime: number = Date.now()\n\n  #timer: number\n  connectedCallback() {\n    this.#timer = window.setInterval(() => {\n      this.curTime = Date.now()\n    }, 1000)\n  }\n\n  disConnectedCallback() {\n    if (this.#timer) {\n      clearInterval(this.#timer)\n    }\n  }\n  private getText(): string {\n    return format(this.first, this.middle, this.last)\n  }\n\n  render() {\n    const time = new Date(this.curTime).toLocaleDateString()\n    return <div class=\"my-container\">Hello, World! I'm {this.getText()} {time} {String(this.isOpen)}</div>\n  }\n}\n",":host {\n\tdisplay: block;\n}\n\n.list-wrapper {\n\tborder: 1px dashed #ccc;\n\tpadding: 20px 40px;\n\tfont-size: 16px;;\n}\n\nul {\n\tpadding: 0;\n}\n\nh1 {\n\tmargin: 0 0 10px;\n\tfont-size: 1.5em;\n}\n\ninput {\n\tpadding: 4px 8px;\n\tfont-size: 1.5em;\n}\n\n.header {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n\nli {\n\tmargin: 10px 0;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tcursor: pointer;\n}\n\np {\n\tmargin: 0;\n}\n\np.done {\n\ttext-decoration: line-through;\n}\n\nli:hover {\n\tfont-weight: 500;\n}\n","import { Component, Prop, h, State, Watch, Method, Event, EventEmitter } from '@stencil/core'\n\nexport interface TodoItem {\n\tdesc: string,\n\tdone: boolean\n}\n\n@Component({\n  tag: 'todo-list',\n  styleUrl: 'todo-list.css',\n  shadow: true,\n})\nexport class TodoList {\n  @Prop() header = 'Default Title'\n\n  @Prop() list: TodoItem[] = []\n\n  @State() internalList: TodoItem[] = []\n\n  @State() inputVal = ''\n\n  @Watch('internalList')\n  @Watch('inputVal')\n  watchStateHandler(newVal, oldVal, propName) {\n    console.log(`oldVal of ${propName} is`, oldVal)\n    console.log(`newVal of ${propName} is`, newVal)\n  }\n\n  @Event() todoCompleted: EventEmitter<TodoItem>\n  @Event() todoAdded: EventEmitter<TodoItem>\n\n  handleInputChange(e) {\n    this.inputVal = e.target.value\n  }\n\n  handleInputEnter(e) {\n    if (e.keyCode === 13 && this.inputVal) {\n      // press enter\n      this.internalList = [{ desc: this.inputVal, done: false }, ...this.internalList]\n\t\t\tthis.todoAdded.emit(this.internalList[0])\n      this.inputVal = ''\n    }\n  }\n\n  toggleDone(targetIdx: number) {\n    if (targetIdx >= 0) {\n      const nList = this.internalList.slice()\n      nList[targetIdx] = {\n        ...nList[targetIdx],\n        done: !nList[targetIdx].done,\n      }\n\n\t\t\tthis.todoCompleted.emit(nList[targetIdx])\n      this.internalList = nList\n    }\n  }\n\n  removeItem(targetIdx: number) {\n    if (targetIdx >= 0) {\n      this.internalList = this.internalList.filter((_, idx) => idx !== targetIdx)\n    }\n  }\n\n  connectedCallback() {\n    this.internalList = this.list?.length\n      ? this.list.slice()\n      : [\n          { desc: 'Get up', done: true },\n          { desc: 'Go to work', done: true },\n          { desc: 'Go home', done: false },\n        ]\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputEnter = this.handleInputEnter.bind(this)\n    this.toggleDone = this.toggleDone.bind(this)\n    this.removeItem = this.removeItem.bind(this)\n  }\n\n  @Method()\n  async addItem(desc: string) {\n    this.internalList = [{ desc, done: false }, ...this.internalList]\n    return this.internalList\n  }\n  render() {\n    return (\n      <div class=\"list-wrapper\">\n        <div class=\"header\">\n          <h1>{this.header}</h1>\n\n          <input type=\"text\" value={this.inputVal} onInput={this.handleInputChange} onKeyPress={this.handleInputEnter} placeholder=\"Is there anything todo ?\" />\n        </div>\n\n        <ul>\n          {this.internalList.map((i, idx) => {\n            return (\n              <li onClick={() => this.toggleDone(idx)}>\n                <p class={{ done: i.done }}>\n                  {idx + 1}. {i.desc}\n                </p>\n\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    this.removeItem(idx)\n                  }}\n                >\n                  X\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n}",":host {\n\tdisplay: block;\n\t--spacing: 1.5rem;\n  --radius: 10px;\n}\n\n.tree li {\n  display: block;\n  position: relative;\n  padding-left: calc(2 * var(--spacing) - var(--radius) - 2px);\n}\n\n.tree ul {\n  margin-left: calc(var(--radius) - var(--spacing));\n  padding-left: 0;\n}\n\n.tree ul li {\n\tmargin: 8px 0;\n  border-left: 2px solid #ddd;\n}\n\n.tree ul li:last-child {\n  border-color: transparent;\n}\n\n.tree ul li::before {\n  content: '';\n  display: block;\n  position: absolute;\n  top: calc(var(--spacing) / -2);\n  left: -2px;\n  width: calc(var(--spacing) + 2px);\n  height: calc(var(--spacing) + 1px);\n  border: solid #ddd;\n  border-width: 0 0 2px 2px;\n}\n\n.tree summary {\n  display: block;\n\t/* margin: 4px 0; */\n  cursor: pointer;\n}\n\n.tree summary:hover {\n\tbackground: #eee;\n}\n\n.tree summary::marker,\n.tree summary::-webkit-details-marker {\n  display: none;\n}\n\n.tree summary:focus {\n  outline: none;\n}\n\n.tree summary:focus-visible {\n  outline: 1px dotted #000;\n}\n\n.tree li::after,\n.tree summary::before {\n  content: '';\n  display: block;\n  position: absolute;\n  top: calc(var(--spacing) / 2 - var(--radius));\n  left: calc(var(--spacing) - var(--radius) - 1px);\n  width: calc(2 * var(--radius));\n  height: calc(2 * var(--radius));\n  border-radius: 50%;\n  background: #ddd;\n}\n\n.tree summary::before {\n  content: '+';\n  z-index: 1;\n  background: #696;\n  color: #fff;\n  line-height: calc(2 * var(--radius) - 2px);\n  text-align: center;\n}\n\n.tree details[open] > summary::before {\n  content: 'âˆ’';\n}\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core'\n\nexport interface TreeNode {\n  label: string\n  children?: TreeNode[]\n\t[key: string]: any\n}\n\n@Component({\n  tag: 'tree-view',\n  styleUrl: 'tree-view.css',\n  shadow: true,\n})\nexport class TreeView {\n  @Prop() data: TreeNode[] = []\n  @Prop() expanded = false\n\n  @Event() toggleNode: EventEmitter<{node: TreeNode, expand: boolean }>\n\n  connectedCallback() {\n    // this.data = [\n    // \t{\n    // \t\tlabel: 'grandpa',\n    // \t\tchildren: [\n    // \t\t\t{\n    // \t\t\t\tlabel: 'father',\n    // \t\t\t\tchildren: [\n    // \t\t\t\t\t{\n    // \t\t\t\t\t\tlabel: 'brother1'\n    // \t\t\t\t\t},\n    // \t\t\t\t\t{\n    // \t\t\t\t\t\tlabel: 'sister1'\n    // \t\t\t\t\t}\n    // \t\t\t\t]\n    // \t\t\t},\n    // \t\t\t{\n    // \t\t\t\tlabel: 'mother',\n    // \t\t\t\tchildren: [\n    // \t\t\t\t\t{\n    // \t\t\t\t\t\tlabel: 'brother2'\n    // \t\t\t\t\t},\n    // \t\t\t\t\t{\n    // \t\t\t\t\t\tlabel: 'sister2'\n    // \t\t\t\t\t}\n    // \t\t\t\t]\n    // \t\t\t},\n    // \t\t]\n    // \t}\n    // ]\n  }\n\n  render() {\n    function renderNode(data: TreeNode[], expanded = false) {\n      const childNodes = data.map(i => {\n        const { label, children } = i\n        return children?.length ? (\n          <li>\n            <details open={expanded}>\n              <summary>{label}</summary>\n              {renderNode(children, expanded)}\n            </details>\n          </li>\n        ) : (\n          <li>{label}</li>\n        )\n      })\n      return <ul class=\"tree\">{childNodes}</ul>\n    }\n    return renderNode(this.data, this.expanded)\n  }\n}\n"],"mappings":"2DAAgBA,EAAOC,EAAeC,EAAgBC,GACpD,OAAQF,GAAS,KAAOC,EAAS,IAAIA,IAAW,KAAOC,EAAO,IAAIA,IAAS,GAC7E,CCFA,MAAMC,EAAiB,6E,swBCQVC,EAAW,M,yBA2BtBC,EAAAC,IAAAC,UAAA,G,2EAX2B,K,kCASAC,KAAKC,K,CAPhCC,eACEH,KAAKI,QAAUJ,KAAKI,M,CAStBC,oBACEC,EAAAN,KAAIF,EAAUS,OAAOC,aAAY,KAC/BR,KAAKS,QAAUR,KAAKC,KAAK,GACxB,KAAK,I,CAGVQ,uBACE,GAAIC,EAAAX,KAAIF,EAAA,KAAS,CACfc,cAAcD,EAAAX,KAAIF,EAAA,K,EAGde,UACN,OAAOrB,EAAOQ,KAAKP,MAAOO,KAAKN,OAAQM,KAAKL,K,CAG9CmB,SACE,MAAMC,EAAO,IAAId,KAAKD,KAAKS,SAASO,qBACpC,OAAOC,EAAA,OAAKC,MAAM,gBAAc,qBAAoBlB,KAAKa,UAAS,IAAGE,EAAI,IAAGI,OAAOnB,KAAKI,Q,2BCrD5F,MAAMgB,EAAc,2Z,MCYPC,EAAQ,M,uHACF,gB,UAEU,G,kBAES,G,cAEhB,E,CAIpBC,kBAAkBC,EAAQC,EAAQC,GAChCC,QAAQC,IAAI,aAAaF,OAAeD,GACxCE,QAAQC,IAAI,aAAaF,OAAeF,E,CAM1CK,kBAAkBC,GAChB7B,KAAK8B,SAAWD,EAAEE,OAAOC,K,CAG3BC,iBAAiBJ,GACf,GAAIA,EAAEK,UAAY,IAAMlC,KAAK8B,SAAU,CAErC9B,KAAKmC,aAAe,CAAC,CAAEC,KAAMpC,KAAK8B,SAAUO,KAAM,UAAYrC,KAAKmC,cACtEnC,KAAKsC,UAAUC,KAAKvC,KAAKmC,aAAa,IACnCnC,KAAK8B,SAAW,E,EAIpBU,WAAWC,GACT,GAAIA,GAAa,EAAG,CAClB,MAAMC,EAAQ1C,KAAKmC,aAAaQ,QAChCD,EAAMD,GAAUG,OAAAC,OAAAD,OAAAC,OAAA,GACXH,EAAMD,IAAU,CACnBJ,MAAOK,EAAMD,GAAWJ,OAG7BrC,KAAK8C,cAAcP,KAAKG,EAAMD,IAC3BzC,KAAKmC,aAAeO,C,EAIxBK,WAAWN,GACT,GAAIA,GAAa,EAAG,CAClBzC,KAAKmC,aAAenC,KAAKmC,aAAaa,QAAO,CAACC,EAAGC,IAAQA,IAAQT,G,EAIrEpC,oB,MACEL,KAAKmC,eAAegB,EAAAnD,KAAKoD,QAAI,MAAAD,SAAA,SAAAA,EAAEE,QAC3BrD,KAAKoD,KAAKT,QACV,CACE,CAAEP,KAAM,SAAUC,KAAM,MACxB,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,UAAWC,KAAM,QAE/BrC,KAAK4B,kBAAoB5B,KAAK4B,kBAAkB0B,KAAKtD,MACrDA,KAAKiC,iBAAmBjC,KAAKiC,iBAAiBqB,KAAKtD,MACnDA,KAAKwC,WAAaxC,KAAKwC,WAAWc,KAAKtD,MACvCA,KAAK+C,WAAa/C,KAAK+C,WAAWO,KAAKtD,K,CAIzCuD,cAAcnB,GACZpC,KAAKmC,aAAe,CAAC,CAAEC,OAAMC,KAAM,UAAYrC,KAAKmC,cACpD,OAAOnC,KAAKmC,Y,CAEdrB,SACE,OACEG,EAAA,OAAKC,MAAM,gBACTD,EAAA,OAAKC,MAAM,UACTD,EAAA,UAAKjB,KAAKwD,QAEVvC,EAAA,SAAOwC,KAAK,OAAOzB,MAAOhC,KAAK8B,SAAU4B,QAAS1D,KAAK4B,kBAAmB+B,WAAY3D,KAAKiC,iBAAkB2B,YAAY,8BAG3H3C,EAAA,UACGjB,KAAKmC,aAAa0B,KAAI,CAACC,EAAGZ,IAEvBjC,EAAA,MAAI8C,QAAS,IAAM/D,KAAKwC,WAAWU,IACjCjC,EAAA,KAAGC,MAAO,CAAEmB,KAAMyB,EAAEzB,OACjBa,EAAM,EAAC,KAAIY,EAAE1B,MAGhBnB,EAAA,UACE8C,QAASlC,IACPA,EAAEmC,kBACFhE,KAAK+C,WAAWG,EAAI,GACrB,S,6GCvGnB,MAAMe,EAAc,0sC,MCaPC,EAAQ,M,0EACQ,G,cACR,K,CAInB7D,oB,CAgCAS,SACE,SAASqD,EAAWC,EAAkBC,EAAW,OAC/C,MAAMC,EAAaF,EAAKP,KAAIC,IAC1B,MAAMS,MAAEA,EAAKC,SAAEA,GAAaV,EAC5B,OAAOU,IAAQ,MAARA,SAAQ,SAARA,EAAUnB,QACfpC,EAAA,UACEA,EAAA,WAASwD,KAAMJ,GACbpD,EAAA,eAAUsD,GACTJ,EAAWK,EAAUH,KAI1BpD,EAAA,UAAKsD,EACN,IAEH,OAAOtD,EAAA,MAAIC,MAAM,QAAQoD,E,CAE3B,OAAOH,EAAWnE,KAAKoE,KAAMpE,KAAKqE,S"}